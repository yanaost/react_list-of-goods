{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","map","item","className","App","state","isStarted","NONE","this","type","onClick","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAgBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAIC,EAAY,YAAOH,GAgBvB,OAdIC,IAAaJ,EAASO,UACxBD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAOD,EAAEE,cAAcD,MAIvBN,IAAaJ,EAASY,QACxBN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEI,OAASH,EAAEG,WAGzB,IAAfR,IACFC,EAAeA,EAAaQ,WAI5BR,EAAaS,KAAI,SAAAC,GAAI,OACnB,oBAAIC,UAAU,cAAd,SAA6BD,Q,SA7B9BhB,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAwCE,IAAMkB,EAAb,4MACEC,MAA0B,CACxBC,WAAW,EACXf,YAAY,EACZD,SAAUJ,EAASqB,MAJvB,4CAOE,WAAU,IAAD,OACP,EAA4CC,KAAKH,MAAzCC,EAAR,EAAQA,UAAWhB,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,WAE7B,OACE,sBAAKY,UAAU,MAAf,WACIG,GACA,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEL,WAAW,KAH/B,mBAUDA,GACC,qCACE,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAErB,SAAUJ,EAASO,YAHvC,iCASA,wBACEgB,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAErB,SAAUJ,EAASY,UAHvC,4BASA,wBACEW,KAAK,SACLC,QAAS,WACP,EAAKC,UAAS,SAACN,GAAD,MAAY,CACxBd,YAAac,EAAMd,gBAJzB,qBAWA,wBACEkB,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEpB,YAAY,EAAOD,SAAUJ,EAASqB,QAH1D,sBAWHD,GACC,oBAAIH,UAAU,QAAd,SACGf,EAAkBD,EAAiBG,EAAUC,YAnE1D,GAAyBqB,IAAMC,WCrD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c5a0de22.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  let visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => {\n      return a.localeCompare(b);\n    });\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => (a.length - b.length));\n  }\n\n  if (isReversed === true) {\n    visibleGoods = visibleGoods.reverse();\n  }\n\n  return (\n    visibleGoods.map(item => (\n      <li className=\"Goods__item\">{item}</li>\n    ))\n  );\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly <State> = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isStarted, sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"App\">\n        {!isStarted && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isStarted: true });\n            }}\n          >\n            Start\n          </button>\n        )}\n\n        {isStarted && (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ sortType: SortType.ALPHABET });\n              }}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ sortType: SortType.LENGTH });\n              }}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState((state) => ({\n                  isReversed: !state.isReversed,\n                }));\n              }}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ isReversed: false, sortType: SortType.NONE });\n              }}\n            >\n              Reset\n            </button>\n          </>\n        )}\n\n        {isStarted && (\n          <ul className=\"Goods\">\n            {getReorderedGoods(goodsFromServer, sortType, isReversed)}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}